; 1.) defined procedures with any primitive procedure dont evaluate properly, they are either 1 or -1 depending on parity
(
  (define (negative n) (- 0 n))
  (define (positive n) (+ 0 n))
  (negative 12) ; -1
  (positive 12) ; 1
)
; even this
(
  (define n (+ 22 22))
  (+ n 1)
)

; found by trying to evaluate
(
  (define (negative n) (- 0 n))
  (define (remainder a b)
    (- a (* (/ a b) b)))
  (define (abs x)
    (if (< x 0)
      (- x (* 2 x))
      x))
  (negative 15)
)

; 2.) comments inside the string would be nice

; 3.) a keyword that returns the content of the current env in scope would be nice

; 4.) define in body of define only works if in expression so
; might be easy to fix by wrapping and evaling again but messy
(
  (define (return-n-plus-two n)
   (define x 2)
   (+ n x))
) ; results in an error, the body is just (define x 2) the (+ n x) is just gone

(
  (define (return-n-plus-two n)
   (
    (define x 2)
    (+ n x)))
) ; works