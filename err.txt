g++ -std=c++2a -w main.cpp
main.cpp: In function ‘int main()’:
main.cpp:28:34: error: ‘tokens’ was not declared in this scope
   28 |  using token_away = decltype(car(tokens{}));
      |                                  ^~~~~~
main.cpp:28:40: error: expected ‘)’ before ‘{’ token
   28 |  using token_away = decltype(car(tokens{}));
      |                                 ~      ^
      |                                        )
main.cpp:29:33: error: ‘token_away’ was not declared in this scope
   29 |  using list_Away = decltype(car(token_away{}));
      |                                 ^~~~~~~~~~
main.cpp:29:43: error: expected ‘)’ before ‘{’ token
   29 |  using list_Away = decltype(car(token_away{}));
      |                                ~          ^
      |                                           )
main.cpp:30:29: error: ‘list_Away’ was not declared in this scope
   30 |  using first = decltype(car(list_Away{}));
      |                             ^~~~~~~~~
main.cpp:30:38: error: expected ‘)’ before ‘{’ token
   30 |  using first = decltype(car(list_Away{}));
      |                            ~         ^
      |                                      )
In file included from main.cpp:10:
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’:
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
   54 |   } else if constexpr (is_c_list<curr>) {
      |          ^~
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’:
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 3]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 4]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 5]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 6]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’:
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 10]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 11]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 12]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 13]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 14]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 15]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 16]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<integer<1> >’ and then ‘table<>’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 15]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, integer<1> >’ and then ‘table<integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 14]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<c_<107>, whitespace, integer<1> >’ and then ‘table<whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 13]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 12]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 11]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 10]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 9]’:
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 8]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’ and then ‘table<integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 18]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
   54 |   } else if constexpr (is_c_list<curr>) {
      |          ^~
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 19]’:
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 18]’
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:54:10: error: cannot resolve overloaded function ‘is_c_list’ based on conversion to type ‘bool’
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<integer<1> >’ and then ‘table<>’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 18]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, integer<1> >’ and then ‘table<integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 6]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<table<whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1> >, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 5]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 4]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 3]’:
h/table.h:55:69:   recursively required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 2]’:
h/table.h:55:69:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<whitespace, c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<whitespace, c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
h/table.h: In instantiation of ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 1]’:
h/table.h:47:68:   required from ‘constexpr auto tokenize_table_entries(Lambda) [with Lambda = main()::<lambda()>; long unsigned int Index = 0]’
main.cpp:37:50:   required from here
h/table.h:59:54: error: inconsistent deduction for auto return type: ‘table<plus, whitespace, c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’ and then ‘table<whitespace, c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
h/table.h:59:65: error: too many initializers for ‘table<plus, whitespace, c_<97>, c_<98>, whitespace, integer<1>, whitespace, integer<1>, whitespace, integer<1>, whitespace, c_<111>, c_<107>, whitespace, integer<1>, whitespace, integer<1> >’
   59 |    return tokenize_table_entries< Lambda, Index + 1 >(str_lambda);
      |                                                                 ^
make: *** [Makefile:2: make] Error 1
